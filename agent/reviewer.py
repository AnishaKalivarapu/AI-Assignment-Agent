"""
Writer Agent
Generates draft content using a fine-tuned LLM (LoRA).
"""

from planner import PlannerAgent

class WriterAgent:
    def __init__(self, model_name="fine-tuned-academic-llm"):
        """
        Initialize Writer Agent with fine-tuned model.
        model_name can be used to load LoRA weights.
        """
        self.model_name = model_name
        # Placeholder for LLM initialization
        print(f"[Writer] Loaded fine-tuned model: {model_name}")

    def write_section(self, section_title: str, points: list) -> str:
        """
        Writes a section based on outline points.
        """
        content = f"\n## {section_title}\n"
        for point in points:
            # Simulate fine-tuned LLM generating detailed content
            content += f"{point}: This paragraph is generated by {self.model_name} with elaboration and academic tone.\n"
        return content

    def generate_draft(self, outline: dict) -> str:
        """
        Generate full draft based on the planner's outline.
        """
        draft = ""
        print("[Writer] Generating draft for entire outline...")
        for section, points in outline.items():
            draft += self.write_section(section, points)
        print("[Writer] Draft generation completed.")
        return draft


if __name__ == "__main__":
    topic = "Automating University Assignments using AI Agents"
    planner = PlannerAgent()
    outline = planner.generate_outline(topic)

    writer = WriterAgent()
    draft = writer.generate_draft(outline)
    print("\nGenerated Draft:\n")
    print(draft)
